[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ulen"
version = "0.1.dev0"
description = "Tweak Length"
dynamic = ["readme"]
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [{name = "Gouji Ochiai", email = "gjo.ext@gmail.com"}]
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Software Development :: Libraries",
  "Topic :: Utilities",
]
urls.repository = "https://github.com/gjo/ulen"
dependencies = []

[project.optional-dependencies]
testing = [
  "pytest",
]
develop = [
  "black~=23.1",
  "build",
  "check-manifest",
  "coverage",
  "flake8",
  "flake8-pyproject",
  "invoke",
  "isort~=5.12",
  "mypy",
  "pytest",
  "pytest-randomly",
  "readme-renderer[md]",
  "tox",
  "twine",
]

[tool.setuptools]
dynamic = {readme = {file = ["README.rst", "CHANGES.rst"]}}
packages.find = {where = ["src"]}
zip-safe = false

[tool.distutils.bdist_wheel]
universal = false

[tool.black]
line-length = 119
target-version = ["py310", "py311", "py312"]

[tool.check-manifest]
ignore-bad-ideas = ["*.mo"]

[tool.coverage.paths]
source = ["src/", ".tox/**/site-packages/"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_also = [
  "\\.\\.\\.",
  "if TYPE_CHECKING:",
]

[tool.coverage.run]
branch = true
source = ["src", "tests"]

[tool.flake8]
extend-ignore = ["E203"]
max-line-length = 119
show-source = true

[tool.isort]
line_length = 119
profile = "black"
skip_gitignore = true

[tool.mypy]
show_error_codes = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{310,311,312},coverage,lint,mypy
isolated_build = True

[testenv]
commands = pytest
deps =
  coverage: coverage
  mypy: mypy
extras = testing

[testenv:coverage]
commands =
  coverage erase
  coverage run --source={envsitepackagesdir}/ulen,tests -m pytest
  coverage report

[testenv:lint]
skip_install = true
commands =
  python -c 'import shutil; shutil.rmtree("dist/tox", True)'
  python -m build --wheel --outdir dist/tox
  twine check dist/tox/*.whl
  check-manifest
  isort --check-only --diff src tests
  black --check --diff src tests
  flake8 src tests
deps =
  black
  build
  check-manifest
  flake8
  flake8-pyproject
  isort
  readme_renderer[md]
  twine

[testenv:mypy]
commands = mypy --strict --no-incremental src tests

# run explicit
[testenv:codeformat]
skip_install = true
commands =
  isort src tests
  black src tests
deps =
  black
  isort
"""
